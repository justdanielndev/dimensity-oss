name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            targets: node18-linux-x64,node18-win-x64
            artifact-name: linux-windows-binaries
          - os: macos-latest
            targets: node18-macos-arm64
            artifact-name: macos-binaries
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install pkg globally
      run: npm install -g pkg
      
    - name: Build with pkg
      run: pkg index.js --targets ${{ matrix.targets }} --output dimensity
      
    - name: Rename Linux/Windows binaries
      if: matrix.os == 'ubuntu-latest'
      run: |
        mv dimensity-linux-x64 dimensity-linux-x64
        mv dimensity-win-x64.exe dimensity-windows-x64.exe
        
    - name: Sign and rename macOS binary
      if: matrix.os == 'macos-latest'
      run: |
        codesign --sign - --force --deep dimensity-macos-arm64
        mv dimensity-macos-arm64 dimensity-macos-arm64
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: |
          dimensity-linux-x64
          dimensity-windows-x64.exe
          dimensity-macos-arm64
        if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          linux-windows-binaries/dimensity-linux-x64
          linux-windows-binaries/dimensity-windows-x64.exe
          macos-binaries/dimensity-macos-arm64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}